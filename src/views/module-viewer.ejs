<div class="page-container">
    <div class="module-viewer">
        <!-- Loading state -->
        <div id="loadingState" class="loading">
            <p>Loading module...</p>
        </div>

        <!-- Module content will be populated by JavaScript -->
        <div id="moduleContent" style="display: none;">
            <!-- Content will be injected here -->
        </div>

        <!-- Error state -->
        <div id="errorState" style="display: none;">
            <p class="error">Error loading module. Please try again.</p>
            <a href="/my-courses" class="btn-secondary">Back to My Courses</a>
        </div>
    </div>
</div>

<style>
.module-viewer {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

.module-header {
    text-align: center;
    margin-bottom: 30px;
    padding-bottom: 20px;
    border-bottom: 2px solid #eee;
}

.module-header h1 {
    color: #333;
    margin-bottom: 10px;
}

.module-header .breadcrumb {
    color: #666;
    font-size: 16px;
}

.completion-status {
    display: inline-block;
    padding: 6px 12px;
    border-radius: 20px;
    font-size: 14px;
    font-weight: 500;
    margin-left: 15px;
}

.completion-status.completed {
    background: #d4edda;
    color: #155724;
}

.completion-status.in-progress {
    background: #fff3cd;
    color: #856404;
}

.module-content-area {
    margin-bottom: 30px;
}

.content-viewer {
    background: #f8f9fa;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    margin-bottom: 30px;
}

.content-section {
    padding: 20px;
    background: white;
}

.content-section:not(:last-child) {
    border-bottom: 1px solid #eee;
}

.video-player {
    width: 100%;
    max-height: 600px;
}

.pdf-viewer {
    width: 100%;
    height: 600px;
    border: none;
}

.content-placeholder {
    padding: 60px 20px;
    text-align: center;
    color: #666;
    background: #f8f9fa;
}

.content-placeholder .icon {
    font-size: 48px;
    margin-bottom: 20px;
    color: #007bff;
}

.module-description {
    background: white;
    padding: 25px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-bottom: 30px;
}

.module-description h3 {
    color: #333;
    margin-bottom: 15px;
    padding-bottom: 10px;
    border-bottom: 1px solid #eee;
}

.module-description p {
    line-height: 1.6;
    color: #555;
}

.module-actions {
    text-align: center;
    margin: 30px 0;
}

.module-actions .btn {
    margin: 0 10px;
}

.completion-button {
    background: #28a745;
    color: white;
    border: none;
    padding: 12px 30px;
    border-radius: 6px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
}

.completion-button:hover {
    background: #218838;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(40, 167, 69, 0.3);
}

.completion-button:disabled {
    background: #6c757d;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.completion-button.completed {
    background: #28a745;
    cursor: default;
}

.navigation-section {
    background: white;
    padding: 25px;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    margin-top: 30px;
}

.nav-buttons {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 15px;
}

.nav-group {
    display: flex;
    gap: 10px;
}

.btn-primary {
    background: #007bff;
    color: white;
    padding: 10px 20px;
    border-radius: 6px;
    text-decoration: none;
    border: none;
    cursor: pointer;
    transition: background 0.3s ease;
}

.btn-primary:hover {
    background: #0056b3;
}

.btn-secondary {
    background: #6c757d;
    color: white;
    padding: 10px 20px;
    border-radius: 6px;
    text-decoration: none;
    border: none;
    cursor: pointer;
    transition: background 0.3s ease;
}

.btn-secondary:hover {
    background: #545b62;
}

.btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

@media (max-width: 768px) {
    .nav-buttons {
        flex-direction: column;
        text-align: center;
    }
    
    .nav-group {
        justify-content: center;
    }
}
</style>

<script>
let courseId = null;
let moduleId = null;
let moduleData = null;

document.addEventListener('DOMContentLoaded', async () => {
    try {
        // Ensure user is authenticated
        const token = Auth.getToken();
        if (!token) {
            window.location.href = '/login';
            return;
        }

        const loadingState = document.getElementById('loadingState');
        const moduleContent = document.getElementById('moduleContent');
        const errorState = document.getElementById('errorState');

        // Get course ID and module ID from URL
        const urlParts = window.location.pathname.split('/');
        courseId = urlParts[2]; // /course/:courseId/module/:moduleId
        moduleId = urlParts[4];

        if (!courseId || !moduleId) {
            throw new Error('Course ID or Module ID not found');
        }

        // Fetch module data from API
        const response = await fetch(`/api/modules/${moduleId}`, {
            method: 'GET',
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });

        if (!response.ok) {
            if (response.status === 401) {
                window.location.href = '/login';
                return;
            }
            throw new Error(`Request failed: ${response.status}`);
        }

        const result = await response.json();
        
        // Hide loading state
        loadingState.style.display = 'none';

        if (result && result.data) {
            moduleData = result.data;
            
            // Show module content
            moduleContent.style.display = 'block';
            moduleContent.innerHTML = generateModuleHTML(moduleData);
        } else {
            throw new Error('No module data received');
        }

    } catch (error) {
        console.error('Error loading module:', error);
        document.getElementById('loadingState').style.display = 'none';
        document.getElementById('errorState').style.display = 'block';
    }
});

function generateModuleHTML(module) {
    const isCompleted = module.is_completed;
    
    // Determine content types available
    let contentTypes = [];
    if (module.video_content) contentTypes.push('Video');
    if (module.pdf_content) contentTypes.push('Document');
    if (contentTypes.length === 0) contentTypes.push('Content');

    return `
        <div class="module-header">
            <h1>${escapeHtml(module.title)}</h1>
            <div class="breadcrumb">
                <span class="completion-status ${isCompleted ? 'completed' : 'in-progress'}">
                    ${isCompleted ? '✓ Completed' : 'In Progress'}
                </span>
            </div>
        </div>

        <div class="module-content-area">
            ${module.description ? `
                <div class="module-description">
                    <h3>Module Description</h3>
                    <p>${escapeHtml(module.description)}</p>
                </div>
            ` : ''}

            <div class="content-viewer">
                ${generateContentViewer()}
            </div>

            <div class="module-actions">
                ${!isCompleted ? `
                    <button onclick="markComplete()" class="completion-button">
                        Mark as Complete
                    </button>
                ` : `
                    <button class="completion-button completed" disabled>
                        ✓ Module Completed
                    </button>
                `}
            </div>
        </div>

        <div class="navigation-section">
            <div class="nav-buttons">
                <div class="nav-group">
                    <a href="/course/${courseId}/modules" class="btn-secondary">
                        ← Back to Course Modules
                    </a>
                </div>
                
                <div class="nav-group">
                    <a href="/course/${courseId}" class="btn-primary">
                        Course Details
                    </a>
                    <a href="/my-courses" class="btn-secondary">
                        My Courses
                    </a>
                </div>
            </div>
        </div>
    `;
}

function generateContentViewer(moduleType, fileUrl) {
    let content = '';
    
    // Check for video content
    if (moduleData.video_content) {
        const videoUrl = moduleData.video_content;
        const isYouTube = videoUrl.includes('youtube.com') || videoUrl.includes('youtu.be');
        
        if (isYouTube) {
            // Convert YouTube URL to embed format
            let videoId = '';
            if (videoUrl.includes('youtube.com/watch?v=')) {
                videoId = videoUrl.split('v=')[1].split('&')[0];
            } else if (videoUrl.includes('youtu.be/')) {
                videoId = videoUrl.split('youtu.be/')[1].split('?')[0];
            }
            
            content += `
                <div class="content-section">
                    <iframe class="video-player" 
                            src="https://www.youtube.com/embed/${videoId}" 
                            frameborder="0" 
                            allowfullscreen>
                    </iframe>
                </div>
            `;
        } else {
            // Regular video file
            content += `
                <div class="content-section">
                    <video class="video-player" controls>
                        <source src="${videoUrl}" type="video/mp4">
                        Your browser does not support the video tag.
                        <a href="${videoUrl}" target="_blank">Open video in new tab</a>
                    </video>
                </div>
            `;
        }
    }
    
    // Check for PDF content
    if (moduleData.pdf_content) {
        const pdfUrl = moduleData.pdf_content;
        content += `
            <div class="content-section" ${moduleData.video_content ? 'style="margin-top: 30px;"' : ''}>
                <iframe class="pdf-viewer" 
                        src="${pdfUrl}" 
                        type="application/pdf">
                    <p>Your browser does not support PDFs. 
                       <a href="${pdfUrl}" target="_blank">Download the PDF</a>
                    </p>
                </iframe>
            </div>
        `;
    }
    
    // If no content available
    if (!content) {
        return `
            <div class="content-placeholder">
                <div class="icon">📄</div>
                <h3>Content not available</h3>
                <p>This module doesn't have content available yet.</p>
                ${fileUrl ? `<a href="${fileUrl}" target="_blank" class="btn-primary">Open in New Tab</a>` : ''}
            </div>
        `;
    }
    
    return content;
}

async function markComplete() {
    try {
        const token = Auth.getToken();
        if (!token) {
            window.location.href = '/login';
            return;
        }

        const response = await fetch(`/api/modules/${moduleId}/complete`, {
            method: 'PATCH',
            headers: {
                'Authorization': `Bearer ${token}`
            }
        });
        
        if (!response.ok) {
            if (response.status === 401) {
                window.location.href = '/login';
                return;
            }
            throw new Error(`Request failed: ${response.status}`);
        }

        const result = await response.json();
        
        if (result.data && result.data.certificate_url) {
            window.location.href = `/course/${courseId}/modules`;
        } else {
            window.location.reload();
        }
    } catch (error) {
        alert('Failed to mark module as complete. Please try again.');
        console.error('Error marking module complete:', error);
    }
}

function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}
</script>
